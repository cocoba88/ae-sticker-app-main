apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'

android {
    compileSdkVersion 34

    defaultConfig {
        applicationId "com.ae.apps.stickerapp"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 23
        versionName "1.10.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def contentProviderAuthority = applicationId + ".stickercontentprovider"
        manifestPlaceholders = [contentProviderAuthority: contentProviderAuthority]
        buildConfigField("String", "CONTENT_PROVIDER_AUTHORITY", "\"${contentProviderAuthority}\"")
        multiDexEnabled true
    }

    // âœ… Tambahkan ini untuk signing otomatis
    signingConfigs {
        debug {
            storeFile file("$rootDir/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.debug // ðŸ”¥ Signed pakai debug key
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        dev {
            signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.all { output ->
            outputFileName = "aeStickersApp-${variant.versionName}-${variant.name}-${variant.versionCode}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    packagingOptions {
        jniLibs {
            excludes += ['lib/*/libnative-imagetranscoder.so', 'lib/*/libnative-filters.so']
        }
    }

    namespace 'com.ae.apps.stickerapp'

    lint {
        abortOnError false
    }

    buildFeatures {
        buildConfig true
    }
}

// Otomatis filter build type 'dev' saat bukan build dev
def build_param = "${build}"
if (build_param != "dev") {
    android.variantFilter { variant ->
        if (variant.buildType.name == 'dev') {
            variant.setIgnore(true)
        }
    }
} else {
    android.variantFilter { variant ->
        if (variant.buildType.name != 'dev') {
            variant.setIgnore(true)
        }
    }
}

tasks.configureEach { task ->
    println(task.name)
    if (task.name.contains("assembleRelease")) {
        task.dependsOn checkRelease
    }
}

tasks.register('checkRelease') {
    doLast {
        println("checkRelease")
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.google.android.gms:play-services-ads:23.2.0'
    implementation 'androidx.preference:preference:1.2.1'

    def fresco_version = '3.2.0'
    implementation "com.facebook.fresco:fresco:$fresco_version"
    implementation "com.facebook.fresco:webpsupport:$fresco_version"
    implementation "com.facebook.fresco:animated-webp:$fresco_version"
    implementation "com.facebook.fresco:animated-base:$fresco_version"

    implementation 'com.android.volley:volley:1.2.1'
}
